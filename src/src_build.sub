#=====Bash Scripting=================================
SHELL				:=	/bin/bash
MOVE				:= 	@mv
XCOPY				:= 	@cp
MKDIR				:=	@mkdir -p
REMOVE				:=	@rm --force --recursive

#=====Compiler=======================================
AS     				:= 	@arm-none-eabi-as
CC      			:= 	@arm-none-eabi-gcc

#=====Tools==========================================
LD      			:= 	@arm-none-eabi-ld
MAKE    			:= 	@make
NM      			:= 	@arm-none-eabi-nm
ARMIPS				:=	@armips
OBJCOPY 			:= 	@arm-none-eabi-objcopy

#=====Tool Flags=====================================
CFLAGS				:=	-std=gnu11 -mthumb -mthumb-interwork -mcpu=arm7tdmi -fno-inline -mlong-calls -march=armv4t -Wall -Wextra -Wconversion -O2 -Iinclude/libpkn -Iinclude/libdf
ASFLAGS				:=	-mthumb -Iinclude/libpkn/asm/ -Iinclude/libdf/asm/

#=====Directories====================================
SOURCE_DIR			:=	src
OUTPUR_DIR			:=	output
GAME_BUILD_DIR		:=	game_build
BASE_DIR			:=	base
INCLUDE_DIR			:=	include

#=====Functions========================
rwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))

#=====Source Files===================================
C_FILES				:=	$(call rwildcard,$(SOURCE_DIR),*.c)
COBJ_FILES			:=	$(C_FILES:%.c=output/%.o)
S_FILES				:=	$(call rwildcard,$(SOURCE_DIR),*.s)
SOBJ_FILES			:=	$(S_FILES:%.s=output/%.o)
SYMBOL_FILE			:=	$(OUTPUR_DIR)/symbol_list.sym
LINKED_FILE			:=	$(OUTPUR_DIR)/linked.o
BASE				:=	$(wildcard $(BASE_DIR)/*.gba)
GAME_BUILD			:=	$(GAME_BUILD_DIR)/$(notdir $(BASE))
DF_ROM				:=	$(GAME_BUILD_DIR)/df_rom.gba

#=====Make Rules=====================================
$(OUTPUR_DIR)/%.o: %.c
	$(MKDIR) $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@
	
$(OUTPUR_DIR)/%.o: %.s
	$(MKDIR) $(dir $@)
	$(AS) $(ASFLAGS) $< -o $@



#=====Make Targets===================================
.PHONY: clean
clean:
	$(REMOVE) $(OUTPUR_DIR)

.PHONY:	all
all: build

.PHONY: build
build: $(COBJ_FILES) $(SOBJ_FILES)
	$(MKDIR) $(GAME_BUILD_DIR)
	$(LD) $(LDFLAGS) -T linker.ld -T bprd.sym --relocatable -o $(LINKED_FILE) $(COBJ_FILES) $(SOBJ_FILES)
	$(ARMIPS) main.asm
	$(NM) $(LINKED_FILE) -n -g --defined-only | \
	sed -e '{s/^/0x/g};{/.*\sA\s.*/d};{s/\sT\s/ /g}' > $(SYMBOL_FILE)
	cat $(SYMBOL_FILE)
	@echo "=====|Game Complete|====="